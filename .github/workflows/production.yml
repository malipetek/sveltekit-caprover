name: CI - Production

on:
  push:
    branches:
      - "main"

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }} # Used by Prisma
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }} # Used by SendGrid
  JWT_SECRET": ${{ secrets.JWT_SECRET }} # Used by authentication/authorization/session management

  # Email configuration
  EMAIL_DESTINATION: "you@example.com" # Where contact form emails will be sent to.
  EMAIL_REPLY_TO: "no-reply@example.com" # Must be verified email or domain in SendGrid

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: Create build environment variables
        run: echo "VITE_BUILD_DATE=$(date +%Y-%m-%d)" >> $GIBHUT_ENV
      - run: echo "VITE_BUILD_TAG=$(git describe --tags --always)" >> $GITHUB_ENV

      - name: Install Dependencies
        run: yarn

      - name: Build Frontend
        run: yarn build

      #- name: Test
      #  run: yarn test

      #- name: Prisma Migrate
      #  run: yarn prisma migrate deploy

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}

      - name: Deploy Image to CapRrover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: "${{ secrets.CAPROVER_SERVER }}"
          app: "${{ secrets.APP_NAME }}"
          token: "${{ secrets.APP_TOKEN }}"
          image: ${{ env.IMAGE_URL }}
